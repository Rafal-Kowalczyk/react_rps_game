{"version":3,"sources":["components/UserLog/UserLog.js","components/GameWrap/ChoiceButtons/ChoiceButtons.js","components/GameWrap/GameArea/GameArea.js","components/GameWrap/GameWrap.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["UserLog","user","setUser","setIsVisibility","inputRef","useRef","addName","alert","useEffect","current","focus","className","ref","value","onChange","e","target","onKeyDown","key","type","placeholder","onClick","dataButton","id","img","ChoiceButtons","getValue","buttonItem","map","item","GameArea","points","comp","valueComp","pointsComp","GameWrap","useState","setValue","setValueComp","setPoints","setPointsComp","winner","setWinner","endRound","setEndRound","computer","valueC","Math","floor","random","getValueHandler","winnerIs","checkRoundWinner","setTimeout","App","isVisibility","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b33f1c90.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\nimport './UserLog.scss';\r\n\r\nfunction UserLog({ user, setUser, setIsVisibility }) {\r\n  const inputRef = useRef();\r\n\r\n  const updateName = (e) => {\r\n    setUser(e.target.value);\r\n  };\r\n\r\n  const addName = () => {\r\n    if (user !== '') {\r\n      setUser(user);\r\n      setIsVisibility(false);\r\n    } else {\r\n      alert('Wprowadź nazwę gracza!');\r\n    }\r\n  };\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  useEffect(() => {\r\n    focusInput();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='user-wrap'>\r\n      <p className='user__desc'>\r\n        Aby rozpocząć grę podaj swoją nazwę użytkownika\r\n      </p>\r\n      <input\r\n        ref={inputRef}\r\n        value={user}\r\n        onChange={updateName}\r\n        onKeyDown={(e) => e.key === 'Enter' && addName()}\r\n        className='user__input'\r\n        type='text'\r\n        placeholder='Podaj nazwę gracz'\r\n      />\r\n      <button className='user__btn' onClick={addName}>\r\n        Zatwierdź gracza\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserLog;\r\n","import React from 'react';\r\nimport { FaHandRock, FaHandPaper, FaHandScissors } from 'react-icons/fa';\r\n\r\nimport './ChoiceButtons.scss';\r\n\r\nconst dataButton = [\r\n  {\r\n    id: 1,\r\n    value: 'Kamień',\r\n    img: <FaHandRock />,\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 'Papier',\r\n    img: <FaHandPaper />,\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 'Nożyce',\r\n    img: <FaHandScissors />,\r\n  },\r\n];\r\n\r\nfunction ChoiceButtons({ getValue }) {\r\n  const buttonItem = dataButton.map((item) => (\r\n    <button\r\n      className='btn__choice'\r\n      key={item.id}\r\n      value={item.value}\r\n      onClick={getValue()}>\r\n      {item.img}\r\n      {item.value}\r\n    </button>\r\n  ));\r\n\r\n  return <div className='btn__box'>{buttonItem}</div>;\r\n}\r\n\r\nexport default ChoiceButtons;\r\n","import React from 'react';\r\n\r\nfunction GameArea({ user, value, points, comp, valueComp, pointsComp }) {\r\n  return (\r\n    <div className='game__area'>\r\n      <div className='user__box'>\r\n        <div className='user'>{user}</div>\r\n        <div className='choice'>{value}</div>\r\n        <div className='points'>{points}</div>\r\n      </div>\r\n      <span>VS</span>\r\n      <div className='user__box'>\r\n        <div className='user'>{comp}</div>\r\n        <div className='choice'>{valueComp}</div>\r\n        <div className='points'>{pointsComp}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameArea;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ChoiceButtons from './ChoiceButtons/ChoiceButtons';\r\nimport GameArea from './GameArea/GameArea';\r\n\r\nimport './GameWrap.scss';\r\n\r\nfunction GameWrap({ user }) {\r\n  const [value, setValue] = useState('');\r\n  const [valueComp, setValueComp] = useState('');\r\n  const [points, setPoints] = useState(0);\r\n  const [pointsComp, setPointsComp] = useState(0);\r\n  const [winner, setWinner] = useState('');\r\n  const [endRound, setEndRound] = useState(true);\r\n\r\n  const computer = 'Computer';\r\n  const computerChoice = ['Kamień', 'Papier', 'Nożyce'];\r\n\r\n  let valueC = computerChoice[Math.floor(Math.random() * 3)];\r\n\r\n  const getValueComputer = () => {\r\n    setValueComp(valueC);\r\n  };\r\n\r\n  const checkRoundWinner = (e) => {\r\n    let winnerIs = user;\r\n    let value = e.target.value;\r\n\r\n    if (value === valueC) {\r\n      winnerIs = 0;\r\n      setWinner('');\r\n    } else if (\r\n      (valueC === 'Kamień' && value === 'Nożyce') ||\r\n      (valueC === 'Nożyce' && value === 'Papier') ||\r\n      (valueC === 'Papier' && value === 'Kamień')\r\n    ) {\r\n      winnerIs = computer;\r\n    }\r\n\r\n    if (user === winnerIs) {\r\n      setPoints(points + 1);\r\n    } else if (computer === winnerIs) {\r\n      setPointsComp(pointsComp + 1);\r\n    }\r\n  };\r\n\r\n  const getValueHandler = (e) => {\r\n    setValue(e.target.value);\r\n    getValueComputer();\r\n    checkRoundWinner(e);\r\n  };\r\n\r\n  const endFunc = () => {\r\n    if (points === 10) {\r\n      setWinner(`Grę wygrał ${user}`);\r\n      setTimeout(() => {\r\n        setEndRound(false);\r\n      }, 2000);\r\n    } else if (pointsComp === 10) {\r\n      setWinner(`Grę wygrał ${computer}`);\r\n      setTimeout(() => {\r\n        setEndRound(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    endFunc();\r\n    return () => {\r\n      setEndRound(true);\r\n    }; // eslint-disable-next-line\r\n  }, [points, pointsComp]);\r\n\r\n  const returnGameHandler = () => {\r\n    setWinner('');\r\n    setEndRound(true);\r\n    setValue('');\r\n    setValueComp('');\r\n    setPoints(0);\r\n    setPointsComp(0);\r\n  };\r\n\r\n  return (\r\n    <div className='game-wrap'>\r\n      {endRound ? (\r\n        <>\r\n          {winner === '' ? (\r\n            <ChoiceButtons value={value} getValue={() => getValueHandler} />\r\n          ) : null}\r\n          <GameArea\r\n            user={user}\r\n            value={value}\r\n            points={points}\r\n            comp={computer}\r\n            valueComp={valueComp}\r\n            pointsComp={pointsComp}\r\n          />\r\n          <p>{winner}</p>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <button className=\"btn__again\" onClick={returnGameHandler}>Zagraj raz jeszcze</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameWrap;\r\n","import { useState } from 'react';\nimport UserLog from '../UserLog/UserLog';\nimport GameWrap from '../GameWrap/GameWrap';\nimport './App.scss';\n\nfunction App() {\n  const [user, setUser] = useState('');\n  const [isVisibility, setIsVisibility] = useState(true);\n\n  return (\n    <div className='app'>\n      <div className='app__wrap'>\n        <h1 className='app__header'>Witaj w grze</h1>\n        <h4 className='app__subheader'>Kamień Papier Nożyce</h4>\n        {isVisibility ? (\n          <UserLog\n            user={user}\n            setUser={setUser}\n            setIsVisibility={setIsVisibility}\n          />\n        ) : (\n          <GameWrap user={user} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}